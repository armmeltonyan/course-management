log_format myLogData escape=json '$remote_addr $remote_user [$time_local] $request_time $request $status $body_bytes_sent $http_x_identifier "$http_user_agent"'
' $request_body';

server {
   # Increase the proxy read and connect timeout
   proxy_read_timeout 300;
   proxy_connect_timeout 300;
   proxy_send_timeout 300;

   # Increase the FastCGI timeout (if using PHP-FPM)
   fastcgi_read_timeout 300;
   client_max_body_size 300M;
   charset utf-8;

   listen 80 default_server;
   root /var/www/project/public;
   index index.php index.html;

   access_log  /var/www/log/project_access_last.log myLogData;
   error_log  /var/www/log/project_errors.log info;

   add_header X-Frame-Options "SAMEORIGIN";
   add_header X-XSS-Protection "1; mode=block";
   add_header X-Content-Type-Options "nosniff";

   location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)
   {
      return 404;
   }

   location / {
      try_files $uri $uri/ /index.php?$query_string;
   }

   location = /favicon.ico { access_log off; log_not_found off; }
   location = /robots.txt  { access_log off; log_not_found off; }

   error_page 404 /index.php;

   # the docker resolver ip
   resolver 127.0.0.11 valid=30s;

   location ~ \.php$ {
      set $app_upstream 0.0.0.0:9000;
      fastcgi_pass $app_upstream;
      fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
      include fastcgi_params;
   }

   location ~ ^/storage/(.*)$ {
      alias /var/www/project/public/storage/$1;
   }

   location ~ /\.(?!well-known).* {
      deny all;
   }

   location ~ /\.ht {
      deny all;
   }

   location /docs/ {
      try_files $uri $uri/ /docs/index.html;
   }
}
